Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-08-30T21:15:27-06:00

An important thing to note, 
make sure you don't put any comments on the right hand side of a remap. 
They will be interpreted as commands for the remap as opposed to comments.

====== config ======
Created Monday 30 August 2021


   set nocompatible              " be iMproved, required
   filetype off                  " required

   " set the runtime path to include Vundle and initialize
   set rtp+=~/.vim/bundle/Vundle.vim
   call vundle#begin()

   Plugin 'VundleVim/Vundle.vim'                        " Keep Plugins between vundle#begin/end.
   Plugin 'gmarik/vundle'                               " Vundle manage Vundle
   Plugin 'tpope/vim-fugitive'                          " Access to git repo commands
   Plugin 'jreybert/vimagit'                            " Emacs magit for vim
   Plugin 'rbgrouleff/bclose.vim'                       " buffer delete not closing window
   Plugin 'scrooloose/nerdtree'                         " Nerdtree
   Plugin 'git://git.wincent.com/command-t.git'         " File fuzzy finder
   Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}           " Write HTML faster
   Plugin 'chriskempson/tomorrow-theme', {'rtp': 'vim/colors/Tomorrow-Night-Bright'}
   Plugin 'iamcco/markdown-preview.nvim'                " Markdown preview
   Plugin 'vimwiki/vimwiki'                             " Vim wiki note taking
   Plugin 'junegunn/goyo.vim'                           " Distraction-free viewing
   Plugin 'junegunn/limelight.vim'                      " Distraction-free viewing
   Plugin 'vim-lastplace'                               " Remembers last place edited
"{{ Syntax Highlighting and Colors }}
   Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'     " Highlighting Nerdtree
   Plugin 'PotatoesMaster/i3-vim-syntax'                " Highlighting i3 config
   Plugin 'kovetskiy/sxhkd-vim'                         " Highlighting Sxhkd
   Plugin 'vim-python/python-syntax'                    " Highlighting Python
   " Plugin 'romgrk/doom-one.vim'                         " Doom theme
   Plugin 'ap/vim-css-color'                            " Color previews for CSS
   Plugin 'itchyny/lightline.vim'                       " Lightline statusbar
   Plugin 'tpope/vim-commentary'                        " Comment out lines use gcc
   Plugin 'ryanoasis/vim-devicons'                      " Icons for Nerdtree (*last)


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

" see :h vundle for more details or wiki for FAQ

		 " Put your non-Plugin stuff after this line
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Key-bindings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader="/"                     " mapped leader to </>
  " move vertically by visual line (don't skip wrapped lines)
nnoremap k gk
nnoremap j gj
map <leader>w :w!<cr>		          " fast saving
nnoremap Q :Bclose<CR>                " should kill buffer
	" visualy select & move lines with <shift>
xnoremap K :move '<-2<CR>gv-gv
xnoremap J :move '>+1<CR>gv-gv

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Fast editing and reloading of vimrc configs
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <leader>e :e! ~/.vimrc<cr>
map <leader>s :source ~/.vimrc<cr>
autocmd! bufwritepost ~/.vimrc source ~/.vimrc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => search and replace selected text
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General Settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set encoding=UTF-8
set guifont=Droid\ Sans\ Mono\ for\ Powerline\ Nerd\ Font\ Complete\ 12
set path+=**               " Searches current directory recursively.
set wildmenu               " Display all matches when tab complete.
set wildmode=longest,list,full     "should display commands
set incsearch                   " Incremental search
set hidden                      " Needed to keep multiple buffers open
set nobackup                    " No auto backups
set noswapfile                  " No swap
set t_Co=256                    " Set if term supports 256 colors.
set number                      " Display line numbers
set relativenumber              " Display line numbers
set clipboard=unnamedplus       " Copy/paste between vim and other programs.
set so=7                        " Keep 7 lines visable when scrolling
syntax enable
let g:rehash256 = 1
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Status Line
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" The lightline.vim theme
let g:lightline = {
	  \ 'colorscheme': 'deus',
	  \ }

" Always show statusline
set laststatus=2

" Uncomment to prevent non-normal modes showing in powerline and below powerline.
set noshowmode
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => NERDTree
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Uncomment to autostart the NERDTree
" autocmd vimenter * NERDTree
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeDirArrowExpandable = '►'
let g:NERDTreeDirArrowCollapsible = '▼'
let NERDTreeShowLineNumbers=1
let NERDTreeShowHidden=1
let NERDTreeMinimalUI = 1
let g:NERDTreeWinSize=38
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Theming
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" highlight LineNr           ctermfg=8    ctermbg=none    cterm=none
" highlight CursorLineNr     ctermfg=7    ctermbg=8       cterm=none
" highlight VertSplit        ctermfg=0    ctermbg=8       cterm=none
" highlight Statement        ctermfg=2    ctermbg=none    cterm=none
" highlight Directory        ctermfg=4    ctermbg=none    cterm=none
" highlight StatusLine       ctermfg=7    ctermbg=8       cterm=none
" highlight StatusLineNC     ctermfg=7    ctermbg=8       cterm=none
" highlight NERDTreeClosable ctermfg=2
" highlight NERDTreeOpenable ctermfg=8
" highlight Comment          ctermfg=4    ctermbg=none    cterm=italic
" highlight Constant         ctermfg=12   ctermbg=none    cterm=none
" highlight Special          ctermfg=4    ctermbg=none    cterm=none
" highlight Identifier       ctermfg=6    ctermbg=none    cterm=none
" highlight PreProc          ctermfg=5    ctermbg=none    cterm=none
" highlight String           ctermfg=12   ctermbg=none    cterm=none
" highlight Number           ctermfg=1    ctermbg=none    cterm=none
" highlight Function         ctermfg=1    ctermbg=none    cterm=none
" highlight WildMenu         ctermfg=0       ctermbg=80      cterm=none
" highlight Folded           ctermfg=103     ctermbg=234     cterm=none
" highlight FoldColumn       ctermfg=103     ctermbg=234     cterm=none
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Splits and Tabbed Files
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set splitbelow splitright
set expandtab                   " Use spaces instead of tabs.
set shiftwidth=4                " One tab == four spaces.
set tabstop=4                   " One tab == four spaces.
" Remap splits navigation to just CTRL + hjkl
nnoremap <C-h> <C-w>h           " focus moves left
nnoremap <C-j> <C-w>j           " focus moves down
nnoremap <C-k> <C-w>k           " focus moves up
nnoremap <C-l> <C-w>l           " focus moves right
" Make adjusing split sizes a bit more friendly
noremap <silent> <C-Left> :vertical resize +3<CR>
noremap <silent> <C-Right> :vertical resize -3<CR>
noremap <silent> <C-Up> :resize +3<CR>
noremap <silent> <C-Down> :resize -3<CR>
"" Change 2 split windows from vert to horiz or horiz to vert
map <Leader>th <C-w>t<C-w>H
map <Leader>tk <C-w>t<C-w>K

" Removes pipes | that act as seperators on splits
set fillchars+=vert:\

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VimWiki
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:vimwiki_list = [{'path': '~/vimwiki/',
					  \ 'syntax': 'markdown', 'ext': '.md'}]

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Markdown-Preview
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:mkdp_auto_start = 0                    " Turns off auto preview
" specify browser to open preview page       " default= ''
let g:mkdp_browser = 'surf'                  " Uses surf for preview
map <Leader>mk <Plug>MarkdownPreview        " Previews .md files
map <Leader>nm <Plug>MarkdownPreviewStop    " Kills the preview
map <Leader>mp <Plug>MarkdownPreviewToggle  " Preview toggle

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Goyo Settings 
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let g:colors_name = "Tomorrow-Night-Bright"
" colorscheme tomorrow-theme
set background=dark
set termguicolors
let g:limelight_conceal_ctermfg = 240
let g:limelight_conceal_guifg = '#777777'
hi! Normal ctermbg=NONE guibg=NONE
hi! NonText ctermbg=NONE guibg=NONE guifg=NONE ctermfg=NONE




" function! s:goyo_enter()
"   set noshowmode
"   set noshowcmd
"   set scrolloff=999
"   Limelight
" endfunction

" function! s:goyo_leave()
"   set noshowmode
"   set showcmd
"   set scrolloff=5
"   Limelight!
"   hi! Normal ctermbg=NONE guibg=NONE
" endfunction

" autocmd! User GoyoEnter nested call <SID>goyo_enter()
" autocmd! User GoyoLeave nested call <SID>goyo_leave()
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" function! s:goyo_enter()
"   if has('gui_running')
"     set fullscreen
"     set background=light
"     set linespace=7
"   elseif exists('$TMUX')
"     silent !tmux set status off
"   endif
" endfunction

" function! s:goyo_leave()
"   if has('gui_running')
"     set nofullscreen
"     set background=dark
"     set linespace=0
"   elseif exists('$TMUX')
"     silent !tmux set status on
"   endif
" endfunction

" autocmd! User GoyoEnter nested call <SID>goyo_enter()
" autocmd! User GoyoLeave nested call <SID>goyo_leave()
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Other Stuff
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:python_highlight_all = 1

set guioptions-=m  "remove menu bar
set guioptions-=T  "remove toolbar
set guioptions-=r  "remove right-hand scroll bar
set guioptions-=L  "remove left-hand scroll bar
