Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-05-29T05:55:57-06:00

====== How to Set and List Environment Variables in Linux ======
There are several commands available that allow you to list and set environment variables in Linux:
web source
**env**         – The command allows you to run another program in a custom environment without modifying the current one. When used without an argument it will print a list of the current environment variables.
**printenv** – The command prints all or the specified environment variables.
**set**           – The command sets or unsets shell variables. When used without an argument it will print a list of all variables including environment and shell variables, and shell functions.
**unset**      – The command deletes shell and environment variables.
**export**     – The command sets environment variables.

* The **set** command will display a large list of all variables so you probably want to pipe the output to the less command.
$ **set | less**

* The **export** command is used to set Environment variables.
To create an environment variable simply export the shell variable as an environment variable:
$ **export MY_NEW_VAR="My New Var"**

* /etc/environment - Use this file to set up system-wide environment variables. Variables in this file are set in the following format:
**$ FOO=bar**
**$ VAR_TEST="Test Var"**

* /etc/profile - Variables set in this file are loaded whenever a bash login shell is entered. When declaring environment variables in this file you need to use the export command:
**$ export JAVA_HOME="/path/to/java/home"**
**$ export PATH=$PATH:$JAVA_HOME/bin**

* Per-user shell specific configuration files. For example, if you are using Bash, you can declare the variables in the ~/.bashrc:
**$ export PATH="$HOME/bin:$PATH"**

* To load the new environment variables into the current shell session use the source command:
**$ source [[~/.bashrc]]**

== Set an Environment Variable in Linux Permanently ==
If you wish a variable to persist after you close the shell session, you need to set it as an environmental variable permanently. You can choose between setting it for the current user or all users.

1. To set permanent environment variables for a single user, edit the .bashrc file:

**$ sudo nano ~/.bashrc**
2. Write a line for each variable you wish to add using the following syntax:

$ **export [VARIABLE_NAME]=[variable_value]**

3. Save and exit the file. The changes are applied after you restart the shell. If you want to apply the changes during the current session, use the source command:

$ **source ~/.bashrc**
4. To set permanent environment variables for all users, create an .sh file in the /etc/profile.d folder:
sudo nano /etc/profile.d/[filename].sh
5. The syntax to add variables to the file is the same as with .bashrc:

== How to Unset an Environment Variable ==
To unset an environment variable, use the unset command:

**$ unset [VARIABLE_NAME]**
This command permanently removes variables exported through a terminal command.

Variables stored in configuration files are also removed from the current shell session. However, they are set again upon next logging in.

To permanently unset a variable you stored in a file, go to the file, and remove the line containing the variable definition.

